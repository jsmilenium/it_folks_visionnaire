version: '3.9'

services: 
  web:
    restart: unless-stopped
    tty: true
    build:
      context: .
    volumes: 
      - ./:/var/www/html
    depends_on: 
      - db
    networks:
      - test-network

  db:
    image: postgres:12.0-alpine
    restart: unless-stopped
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes: 
    - "./.data/dbdata:/var/lib/postgresql/data"
    networks:
      - test-network

  nginx:
    image: nginx:1.23.3-alpine
    restart: unless-stopped
    ports:
      - "9000:80"
      - "443:443"
    volumes: 
      - ./:/var/www/html
      - ./sourcefiles/nginx:/etc/nginx/conf.d
    depends_on: 
      - web
    networks:
      - test-network

  sonardb:
    image: postgres:12.0-alpine
    networks:
      - test-network
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonardb:/var/lib/postgresql

  sonarqube:
    image: sonarqube:lts
    ports:
      - "9001:9000"
    networks:
      - test-network
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonardb:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    depends_on:
      - sonardb
    volumes:
      - sonarqube_conf:/opt/sonarqube/conf
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_bundled-plugins:/opt/sonarqube/lib/bundled-plugins

  swagger:
    image: swaggerapi/swagger-ui
    ports:
      - "8080:8080"
    environment:
      - SWAGGER_JSON=/mnt/swagger.yaml
    volumes:
      - ./sourcefiles/swagger/swagger.yaml:/mnt/swagger.yaml
    networks:
      - test-network

networks:
  test-network:
    driver: bridge

volumes:
  sonarqube_conf:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_bundled-plugins:
  sonardb: