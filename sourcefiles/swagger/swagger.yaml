swagger: "2.0"
info:
  version: "1.0.0"
  title: "Management API"
host: "localhost:9001"
basePath: "/api"
schemes:
  - "http"
produces:
  - "application/json"
paths:
  /register:
    post:
      summary: "Register user"
      description: "Create a new user account."
      parameters:
      - name: "name"
        in: "formData"
        description: "Name of the user."
        required: true
        type: "string"
      - name: "email"
        in: "formData"
        description: "Email address of the user."
        required: true
        type: "string"
        format: "email"
      - name: "password"
        in: "formData"
        description: "User's password."
        required: true
        type: "string"
        format: "password"
      responses:
        201:
          description: "User successfully registered."

  /login:
    post:
      summary: "User login"
      description: "Authenticate and generate a token for the user."
      parameters:
      - name: "email"
        in: "formData"
        description: "Email address of the user."
        required: true
        type: "string"
        format: "email"
      - name: "password"
        in: "formData"
        description: "User's password."
        required: true
        type: "string"
        format: "password"
      responses:
        200:
          description: "Login successful."

  /logout:
    post:
      summary: "User logout"
      description: "Log out the user and invalidate the token."
      responses:
        200:
          description: "Logout successful."

  /refresh:
    post:
      summary: "Refresh token"
      description: "Generate a new token for the user."
      responses:
        200:
          description: "Token successfully refreshed."

  /documents:
    get:
      summary: "List all documents"
      description: "Return a list of documents."
      responses:
        200:
          description: "A list of documents."
    post:
      summary: "Create Document"
      description: "Endpoint to create a new document."
      consumes:
        - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Document object that needs to be added."
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Name of the document."
                example: "Recibo"
              description:
                type: "string"
                description: "Brief description of the document."
                example: "Description"
              document_type:
                type: "string"
                description: "Type of the document."
                example: "pdf"
                enum: ["pdf", "doc", "xls"] # You can extend this list based on the types you support.
              columns_and_fields:
                type: "object"
                description: "Additional fields for the document."
                properties:
                  name:
                    type: "object"
                    properties:
                      value:
                        type: "string"
                        example: "Paulo"
                  description:
                    type: "object"
                    properties:
                      value:
                        type: "string"
                        example: "Descrição"
      responses:
        201:
          description: "Document successfully created."
        400:
          description: "Invalid input or missing parameters."



  /document/{documentId}:
    get:
      summary: "Get document details"
      description: "Return a single document."
      parameters:
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Document details."
    put:
      summary: "Update Document"
      description: "Endpoint to update an existing document."
      consumes:
        - "application/json"
      parameters:
        - in: "path"
          name: "id"
          description: "ID of the document to update."
          required: true
          type: "integer"
        - in: "body"
          name: "body"
          description: "Document object that needs to be updated."
          required: true
          schema:
            type: "object"
            properties:
              name:
                type: "string"
                description: "Name of the document."
                example: "Recibo"
              description:
                type: "string"
                description: "Brief description of the document."
                example: "Description"
              document_type:
                type: "string"
                description: "Type of the document."
                example: "pdf"
                enum: ["pdf", "doc", "xls"] # Adjust this list based on the types you support.
              columns_and_fields:
                type: "object"
                description: "Additional fields for the document."
                properties:
                  name:
                    type: "object"
                    properties:
                      value:
                        type: "string"
                        example: "Paul"
                  description:
                    type: "object"
                    properties:
                      value:
                        type: "string"
                        example: "Test"
    responses:
      200:
        description: "Document successfully updated."
      400:
        description: "Invalid input or missing parameters."
      404:
        description: "Document not found."
    delete:
      summary: "Delete document"
      description: "Delete the specified document."
      parameters:
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Document successfully deleted."

  /document/{documentId}/pdf:
    get:
      summary: "Download document PDF"
      description: "Return the PDF of a specific document."
      parameters:
      - name: "documentId"
        in: "path"
        required: true
        type: "integer"
      responses:
        200:
          description: "Document PDF."
